<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>仁暮的博客</title>
  <icon>http://example.com/icon.png</icon>
  <subtitle>抽刀断水水更流，举杯消愁愁更愁</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-14T08:22:47.398Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>仁暮</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自动化追番</title>
    <link href="http://example.com/2023/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%BD%E7%95%AA/"/>
    <id>http://example.com/2023/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%BD%E7%95%AA/</id>
    <published>2023-02-14T07:38:41.000Z</published>
    <updated>2023-02-14T08:22:47.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几月折腾的时候就想着把自己一些重复的操作自动化，其中就包括动画的下载。</p><p>我自己一通思考，就想出了下面的技术方案，准备<del>上班摸鱼</del>空闲时写一下。</p><span id="more"></span><blockquote><ul><li><input disabled="" type="checkbox"> 下载 aria2 并进行配置</li><li><input disabled="" type="checkbox"> 配置好需要的 tracker</li><li><input disabled="" type="checkbox"> 打开蜜柑计划抓取接口</li><li><input disabled="" type="checkbox"> 利用 aria2 的接口实现下载</li><li><input disabled="" type="checkbox"> 将下载的动画上传至 onedrive</li><li><input disabled="" type="checkbox"> 家中 onedrive 设置自动同步</li><li><input disabled="" type="checkbox"> 然后就开始愉快的观看了</li></ul></blockquote><p>之后发现 gayhub 已经有人写了差不多的项目 <a href="https://github.com/BGmi/BGmi">BGmi</a>，完成度还挺高的，根据<del>懒</del>不自己造轮子原则，那就直接用吧。<br>最近又出了一个<a href="https://github.com/EstrellaXD/Auto_Bangumi">Auto_Bangumi</a> 的工具，利用蜜柑计划的 RSS 订阅与 qt 的基于 RSS 的下载来实现自动下载以及整理到 Plex 或 Jellyfin 等媒体库软件，我媒体库的资源都是 bd 版，所以也没扫描折腾这个的需求了。</p><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><ul><li>多个数据源可选: <a href="https://bangumi.moe/">bangumi_moe</a>, <a href="https://mikanani.me/">mikan_project</a> 或者<a href="https://share.dmhy.org/">dmhy</a></li><li>使用 aria2, transmission 或者 deluge 来下载你的番剧.</li><li>提供一个管理和观看订阅番剧的前端.</li><li>弹幕支持</li><li>提供 uTorrent 支持的 RSS Feed 和移动设备支持的 ICS 格式日历.</li><li>Bangumi Script: 添加自己的番剧解析器</li><li>番剧放松列表和剧集信息</li><li>下载番剧时的过滤器(支持关键词,字幕组和正则)</li><li>多平台支持: Windows, *nux 以及 Router system</li></ul><p><img src="https://github.com/BGmi/BGmi/raw/master/images/bgmi_cli.png?raw=true"><br><img src="https://github.com/BGmi/BGmi/raw/master/images/bgmi_http.png?raw=true"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>使用 pip 安装稳定版本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install bgmi</span><br><span class="line"></span><br><span class="line">bgmi install</span><br></pre></td></tr></table></figure><p>安装完毕后，win 端会自动创建一个半小时运行一次的计划任务来进行查询更新，如果不想要可以关了。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先下载封面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bgmi cal --download-cover</span><br></pre></td></tr></table></figure><p>我推荐使用网页版来进行管理，开启网页访问模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bgmi config TORNADO_SERVE_STATIC_FILES 1</span><br><span class="line"></span><br><span class="line">bgmi_http --port=8888 --address=0.0.0.0</span><br><span class="line"><span class="comment"># 如果报错，可以尝试换一个端口</span></span><br></pre></td></tr></table></figure><p>如果网页端需要输入 <code>ADMIN_TOEKN</code> ，输入 <code>bgmi config</code> 获取 <code>ADMIN_TOKEN</code> 值。<br>PS：下载时记得开启 aria2 服务。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://sspai.com/post/43634">https://sspai.com/post/43634</a></li><li><a href="https://tinko.moe/default/279.html">https://tinko.moe/default/279.html</a></li><li><a href="https://github.com/BGmi/BGmi">https://github.com/BGmi/BGmi</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前几月折腾的时候就想着把自己一些重复的操作自动化，其中就包括动画的下载。&lt;/p&gt;
&lt;p&gt;我自己一通思考，就想出了下面的技术方案，准备&lt;del&gt;上班摸鱼&lt;/del&gt;空闲时写一下。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>块级&amp;行内元素</title>
    <link href="http://example.com/2021/05/08/%E5%9D%97%E7%BA%A7&amp;%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/"/>
    <id>http://example.com/2021/05/08/%E5%9D%97%E7%BA%A7&amp;%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</id>
    <published>2021-05-08T03:40:41.000Z</published>
    <updated>2023-02-14T08:22:47.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>HTML4 中，元素被分成两大类: inline(内联元素)与 block(块级元素)。但在实际的开发过程中，因为页面表现的需要，前端工程师经常把 inline 元素的 display 值设定为 block(比如 a 标签)，也经常把 block 元素的 display 值设定为 inline；之后更是出现了 inline-block 这一对外呈现 inline、对内呈现 block 的属性。因此，简单地把 HTML 元素划分为 inline 与 block 已经不再符合实际需求。</p><p>基于这种考虑，在 HTML5 中，标准制定者重新定义了 HTML 元素的分类，并根据这一新的分类定义了元素的内容模型(Content Model) – 对于一个元素而言，哪些子元素是合法的，而哪些子元素是非法的。</p><p>但是还是列一下出来，这个概念比 HTML5 中的分类容易理解得多。</p><span id="more"></span><h2 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h2><ul><li><p>格式</p><p>默认情况下，块级元素会新起一行。</p></li><li><p>内容模型</p><p>一般块级元素可以包含行内元素和其他块级元素。这种结构上的包含继承区别可以使块级元素创建比行内元素更”大型“的结构。</p></li></ul><p>HTML 标准中块级元素和行内元素的区别至高出现在 4.01 标准中。在 HTML5，这种区别被一个更复杂的<a href="https://developer.mozilla.org/zh-CN/docs/HTML/Content_categories">内容类别</a>代替。”块级“类别大致相当于 HTML5 中的<a href="https://developer.mozilla.org/zh-CN/docs/HTML/Content_categories#Flow_content">流内容</a>类别，而”行内“类别相当于 HTML5 中的<a href="https://developer.mozilla.org/zh-CN/docs/HTML/Content_categories#Phrasing_content">措辞内容</a>类别，不过除了这两个还有其他类别。</p><table><thead><tr><th>标签</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/address"><code>&lt;address&gt;</code></a></td><td>联系方式信息</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article"><code>&lt;article&gt;</code></a></td><td>文章内容</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside"><code>&lt;aside&gt;</code></a></td><td>伴随内容</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio"><code>&lt;audio&gt;</code></a></td><td>音频播放</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/blockquote"><code>&lt;blockquote&gt;</code></a></td><td>块引用</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas"><code>&lt;canvas&gt;</code></a></td><td>绘制图形</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/dd"><code>&lt;dd&gt;</code></a></td><td>定义列表中定义条目描述</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div"><code>&lt;div&gt;</code></a></td><td>文档分区</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/dl"><code>&lt;sl&gt;</code></a></td><td>定义列表</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/fieldset"><code>&lt;fieldset&gt;</code></a></td><td>表单元素分组</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figcaption"><code>&lt;figcaption&gt;</code></a></td><td>图文信息组标题</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figure"><code>&lt;figure&gt;</code></a></td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figcaption">图文信息组 (参照 )</a></td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/footer"><code>&lt;footer&gt;</code></a></td><td>区段尾或页尾</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form"><code>&lt;form&gt;</code></a></td><td>表单</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h1"><code>&lt;h1&gt;</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h2"><code>&lt;h2&gt;</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h3"><code>&lt;h3&gt;</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h4"><code>&lt;h4&gt;</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h5"><code>&lt;h5&gt;</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/h6"><code>&lt;h6&gt;</code></a></td><td>标题级别 1-6.</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/header"><code>&lt;header&gt;</code></a></td><td>区段头或页头</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/hgroup"><code>&lt;hgroup&gt;</code></a></td><td>标题组</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/hr"><code>&lt;hr&gt;</code></a></td><td>水平分割线</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/noscript"><code>&lt;noscript&gt;</code></a></td><td>不支持脚本或禁用脚本时显示的内容</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ol"><code>&lt;ol&gt;</code></a></td><td>有序列表</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/output"><code>&lt;output&gt;</code></a></td><td>表单输出</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p"><code>&lt;p&gt;</code></a></td><td>行</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/pre"><code>&lt;pre&gt;</code></a></td><td>预格式化文本</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section"><code>&lt;section&gt;</code></a></td><td>一个页面区段</td><td>HTML5</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/table"><code>&lt;table&gt;</code></a></td><td>表格</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/tfoot"><code>&lt;tfoot&gt;</code></a></td><td>表脚注</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul"><code>&lt;ul&gt;</code></a></td><td>无序列表</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video"><code>&lt;video&gt;</code></a></td><td>视频</td><td>HTML5</td></tr></tbody></table><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements</a></p><ul><li>内容</li></ul><p>一般情况下，行内元素只能包含数据和其他行内元素。</p><p>而块级元素可以包含行内元素和其他块级元素。这种结构上的包含继承区别可以使块级元素创建比行内元素更”大型“的结构。</p><ul><li>格式</li></ul><p>默认情况下，行内元素不会以新行开始，而块级元素会新起一行。</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/b">b</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/big">big</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/i">i</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/small">small</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/tt">tt</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/abbr">abbr</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/acronym">acronym</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/cite">cite</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/code">code</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/dfn">dfn</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/em">em</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/kbd">kbd</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/strong">strong</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/samp">samp</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/var">var</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">a</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/bdo">bdo</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/br">br</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img">img</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/map">map</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object">object</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/q">q</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script">script</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">span</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/sub">sub</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/sup">sup</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button">button</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input">input</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label">label</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/select">select</a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea">textarea</a></li></ul><h2 id="HTML5-中的分类方式"><a href="#HTML5-中的分类方式" class="headerlink" title="HTML5 中的分类方式"></a>HTML5 中的分类方式</h2><h2 id="置换元素"><a href="#置换元素" class="headerlink" title="置换元素"></a>置换元素</h2><p>深入前端之 replaced element <a href="https://juejin.cn/post/6844903775354748936">https://juejin.cn/post/6844903775354748936</a></p><p>在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">CSS</a> 中，<strong>可替换元素</strong>（<strong>replaced element</strong>）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。</p><p>简单来说，它们的内容不受当前文档的样式的影响。CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容。某些可替换元素，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe"><code>&lt;iframe&gt;</code></a> 元素，可能具有自己的样式表，但它们不会继承父文档的样式。</p><p>CSS 能对可替换元素产生的唯一影响在于，部分属性支持控制元素内容在其框中的位置或定位方式。有关详细信息，请参阅本文下面的<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element#%E6%8E%A7%E5%88%B6%E5%86%85%E5%AE%B9%E6%A1%86%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BD%8D%E7%BD%AE">控制内容框中的对象位置</a>。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element">https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element</a></p><p>典型的可替换元素有：</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe"><code>&lt;iframe&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video"><code>&lt;video&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed"><code>&lt;embed&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img"><code>&lt;img&gt;</code></a></li></ul><p>有些元素仅在特定情况下被作为可替换元素处理，例如：</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/option"><code>&lt;option&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio"><code>&lt;audio&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas"><code>&lt;canvas&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object"><code>&lt;object&gt;</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/applet"><code>&lt;applet&gt;</code></a></li></ul><p>HTML 规范也说了 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input"><code>&lt;input&gt;</code></a> 元素可替换，因为 <code>&quot;image&quot;</code> 类型的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input"><code>&lt;input&gt;</code></a> 元素就像<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img"><code>img</code></a>一样被替换。但是其他形式的控制元素，包括其他类型的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input"><code>input</code></a> 元素，被明确地列为非可替换元素（non-replaced elements）。该规范用术语小挂件（Widgets）来描述它们默认的限定平台的渲染行为。</p><p>用 CSS <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/content"><code>content</code></a> 属性插入的对象是匿名的可替换元素。它们并不存在于 HTML 标记中，因此是“匿名的”。</p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="块级框"><a href="#块级框" class="headerlink" title="块级框"></a>块级框</h2><h2 id="行内框"><a href="#行内框" class="headerlink" title="行内框"></a>行内框</h2><p>不允许设置宽和高</p><h2 id="行内块级框"><a href="#行内块级框" class="headerlink" title="行内块级框"></a>行内块级框</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements</a></p><p><a href="http://blog.shaochuancs.com/w3c-html5-content-model/">http://blog.shaochuancs.com/w3c-html5-content-model/</a></p><p><a href="https://www.zhihu.com/question/34952563">https://www.zhihu.com/question/34952563</a></p><p><a href="http://happylg.cn/2017/09/22/block-and-inline/">http://happylg.cn/2017/09/22/block-and-inline/</a></p><p><a href="https://www.cnblogs.com/zhuzhenwei918/p/6389567.html">https://www.cnblogs.com/zhuzhenwei918/p/6389567.html</a></p><p><a href="http://blog.doyoe.com/2015/03/15/css/%E7%BD%AE%E6%8D%A2%E5%92%8C%E9%9D%9E%E7%BD%AE%E6%8D%A2%E5%85%83%E7%B4%A0/">http://blog.doyoe.com/2015/03/15/css/%E7%BD%AE%E6%8D%A2%E5%92%8C%E9%9D%9E%E7%BD%AE%E6%8D%A2%E5%85%83%E7%B4%A0/</a></p><p><a href="http://blog.doyoe.com/2015/03/09/css/%E8%A7%86%E8%A7%89%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%A8%A1%E5%9E%8B%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E6%A1%86/#block-level-element">http://blog.doyoe.com/2015/03/09/css/%E8%A7%86%E8%A7%89%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%A8%A1%E5%9E%8B%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E6%A1%86/#block-level-element</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h1&gt;&lt;p&gt;HTML4 中，元素被分成两大类: inline(内联元素)与 block(块级元素)。但在实际的开发过程中，因为页面表现的需要，前端工程师经常把 inline 元素的 display 值设定为 block(比如 a 标签)，也经常把 block 元素的 display 值设定为 inline；之后更是出现了 inline-block 这一对外呈现 inline、对内呈现 block 的属性。因此，简单地把 HTML 元素划分为 inline 与 block 已经不再符合实际需求。&lt;/p&gt;
&lt;p&gt;基于这种考虑，在 HTML5 中，标准制定者重新定义了 HTML 元素的分类，并根据这一新的分类定义了元素的内容模型(Content Model) – 对于一个元素而言，哪些子元素是合法的，而哪些子元素是非法的。&lt;/p&gt;
&lt;p&gt;但是还是列一下出来，这个概念比 HTML5 中的分类容易理解得多。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>程序员必备的Obsidian插件</title>
    <link href="http://example.com/2021/05/08/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E7%9A%84Obsidian%E6%8F%92%E4%BB%B6/"/>
    <id>http://example.com/2021/05/08/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E7%9A%84Obsidian%E6%8F%92%E4%BB%B6/</id>
    <published>2021-05-08T03:40:41.000Z</published>
    <updated>2023-02-14T08:22:47.398Z</updated>
    
    <content type="html"><![CDATA[<p>我介绍一个程序员使用 Obsidian 来进行写作所必要的插件以及使用方法。<br>其中在我进行写作的时候发现有几个流程不是很顺畅，也自己尝试创建了项目，以及对一些项目进行了 PR。</p><span id="more"></span><h1 id="Prettier-Format"><a href="#Prettier-Format" class="headerlink" title="Prettier Format"></a>Prettier Format</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个利用 <code>prettier</code> 来将 <code>markdown</code> 进行格式化的工具，同时也支持对 <code>html</code> 和 <code>js</code> 代码块进行格式化。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在社区插件中搜索 <code>prettier format</code> 点击安装。<br>或者使用 github 手动安装：<a href="https://github.com/hipstersmoothie/obsidian-plugin-prettier">https://github.com/hipstersmoothie/obsidian-plugin-prettier</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装完成后，输入 <code>Ctrl+P</code>，在弹出框中输入 <code>format the entire note</code>，进行文档的格式化。<br>如果你也认为每次这样操作是比较麻烦的，你可以在快捷键设置中为这个命令设置快捷键，或者直接在插件设置选项设置 <code>format on save</code> 选项为 <code>true</code>，这样在文件保存时会触发自动格式化。</p><h1 id="Editor-Syntax-Highlight"><a href="#Editor-Syntax-Highlight" class="headerlink" title="Editor Syntax Highlight"></a>Editor Syntax Highlight</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><p>使你的代码在编辑模式下也可以直接进行语法高亮</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>在社区插件中搜索 <code>Editor Syntax Highlight</code> 点击安装。<br>或者使用 github 手动安装：<a href="https://github.com/deathau/cm-editor-syntax-highlight-obsidian">https://github.com/deathau/cm-editor-syntax-highlight-obsidian</a></p><h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>没什么好说的，安装即用，很香。</p><h1 id="Obsidian-Tabs"><a href="#Obsidian-Tabs" class="headerlink" title="Obsidian Tabs"></a>Obsidian Tabs</h1><h2 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h2><p>这允许你能打开多个页面并直接在编辑栏上方进行切换。</p><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><p>在社区插件中搜索 <code>obsidian tabs</code> 点击安装。<br>或者使用 github 手动安装：<a href="https://github.com/gitobsidiantutorial/obsidian-tabs">https://github.com/gitobsidiantutorial/obsidian-tabs</a></p><h2 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h2><p>你可以在笔记栏使用 <code>Ctrl+左键</code> 来在 <code>tab</code> 打开。</p><p>更多细节上的设置请看该插件的设置项。简单翻译了一下，还有几个的选项的用处自己探索吧。</p><p>| 设置项 | 含义 |<br>| Enable Obsidian Tbas | 是否启用插件 |<br>| Two Row Tab Overview | tab 量多了会智能变成两行 |<br>| Tab Height | tab 高度，默认 29 |<br>| proper Horizontai Splits | |<br>| Show Tab Buttons | 允许插件拖动布局 |<br>| Full Sized Title Text | |<br>| Full Tab Spacing | |<br>| Remove Tab Numbers | 移除 Tab 上的数字 |<br>| Remove Tab Underline | 移除下一个页面的下划线 |</p><h1 id="Image-auto-upload-Plugin"><a href="#Image-auto-upload-Plugin" class="headerlink" title="Image auto upload Plugin"></a>Image auto upload Plugin</h1><h1 id="Code-block-from-selection"><a href="#Code-block-from-selection" class="headerlink" title="Code block from selection"></a>Code block from selection</h1><h2 id="介绍-3"><a href="#介绍-3" class="headerlink" title="介绍"></a>介绍</h2><p>利用快捷键快速插入代码块</p><h2 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h2><h2 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h2><p>作为程序员写笔记的时候要经常插入代码块，但 Obsidian 初始的插入方式要足足按七下键盘，还不包括输入语言，实在是太痛苦了。推荐程序员必备！</p><p>安装完成后，在插件的配置页配置需要快速生成的语言（如 js,python,html）目前最多只支持三个。<br>之后你可以采用 <code>Ctrl+P</code> 呼出命令面板来进行插入或者像我一样直接在快捷键中绑定该命令（推荐），妈妈再也不用担心我快速输入代码块了。</p><h1 id="paste-URL-into-selection"><a href="#paste-URL-into-selection" class="headerlink" title="paste URL into selection"></a>paste URL into selection</h1><h2 id="介绍-4"><a href="#介绍-4" class="headerlink" title="介绍"></a>介绍</h2><p>该插件可以快速插入网址</p><h2 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h2><p>在社区插件中搜索 <code>paste URL into selection</code> 点击安装。<br>或者使用 github 手动安装：<a href="https://github.com/denolehov/obsidian-url-into-selection">https://github.com/denolehov/obsidian-url-into-selection</a></p><h2 id="使用-4"><a href="#使用-4" class="headerlink" title="使用"></a>使用</h2><p>当你的剪切板中有网址时，选择文字，点击复制，就会自动生成符合 markdown 的超链接，再也不用手动一个一个输入了。插件设置中有直接自动选中插入的选项，有兴趣的可以尝试一下。</p><h1 id="Hot-Reload"><a href="#Hot-Reload" class="headerlink" title="Hot Reload"></a>Hot Reload</h1><h2 id="介绍-5"><a href="#介绍-5" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个给开发者使用的插件，用于修改代码后热加载插件，使你从手动工作中解脱出来。</p><h2 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h2><p>仅支持 github 手动安装：<a href="https://github.com/pjeby/hot-reload">https://github.com/pjeby/hot-reload</a><br>将代码下载解压后扔到 <code>.obsidian/plugins/</code> 文件夹，然后在第三方插件中进行启用</p><h2 id="使用-5"><a href="#使用-5" class="headerlink" title="使用"></a>使用</h2><p>该插件会对你的插件文件夹进行监视（仅当该文件夹中有 <code>.git</code> 或者 <code>.hotreload</code> 时），如果有变动，便会利用 Obsidian API 来对该插件进行禁用以及启用，以达到手动禁用启用的效果，除此之外这个插件不会做任何额外的工作。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我介绍一个程序员使用 Obsidian 来进行写作所必要的插件以及使用方法。&lt;br&gt;其中在我进行写作的时候发现有几个流程不是很顺畅，也自己尝试创建了项目，以及对一些项目进行了 PR。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Obsidian开发教程-2.编译运行</title>
    <link href="http://example.com/2021/05/06/2-%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/"/>
    <id>http://example.com/2021/05/06/2-%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/</id>
    <published>2021-05-06T05:54:29.000Z</published>
    <updated>2023-02-14T08:22:47.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何使用官方模板"><a href="#如何使用官方模板" class="headerlink" title="如何使用官方模板"></a>如何使用官方模板</h1><p>点击 <a href="https://github.com/obsidianmd/obsidian-sample-plugin">obsidian-sample-plugin</a><br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210430113717.png"><br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210430113751.png"></p><span id="more"></span><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul><li><input disabled="" type="checkbox"> 开发模板代码逐行解析</li></ul><h1 id="将生成的模板-clone-到本地"><a href="#将生成的模板-clone-到本地" class="headerlink" title="将生成的模板 clone 到本地"></a>将生成的模板 clone 到本地</h1><p>找到插件目录，在地址栏输入 cmd 打开命令行界面<br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506125930.png" alt="打开命令行"><br>复制之前生成的项目网址<br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506115957.png" alt="复制项目网址"></p><p>输入 <code>git clone 项目地址</code><br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506130427.png" alt="输入复制的网址"></p><p>如果上述步骤以及 git 配置均正确的话，会输出以下信息：<br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506130757.png" alt="输出信息"></p><h1 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h1><p>使用 vscode 打开刚才 clone 下来的文件夹<br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506131052.png"></p><p>接下来我们会通过打开 vscode 的 terminal 进行操作（你想继续使用 cmd 当然也没问题），在 terminal 中输入 <code>npm install</code>，如果因为网络原因安装失败，请看 <code>node 环境准备</code>一节。<br><img src="https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210506131213.png"></p><p>接下来在 terminal 中输入 <code>npm run dev</code>进行编译，打开 Obsidian，在第三方插件中开启你刚才编译的插件。<br>见证奇迹的时刻到了，如果你编辑器的文字颜色都变红了，就证明你编译成功了。<br>👏👏👏</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;如何使用官方模板&quot;&gt;&lt;a href=&quot;#如何使用官方模板&quot; class=&quot;headerlink&quot; title=&quot;如何使用官方模板&quot;&gt;&lt;/a&gt;如何使用官方模板&lt;/h1&gt;&lt;p&gt;点击 &lt;a href=&quot;https://github.com/obsidianmd/obsidian-sample-plugin&quot;&gt;obsidian-sample-plugin&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210430113717.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://person-pic-1253385403.cos.ap-shanghai.myqcloud.com/img/20210430113751.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Obsidian插件开发, ts" scheme="http://example.com/tags/Obsidian%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91-ts/"/>
    
  </entry>
  
  <entry>
    <title>Obsidian开发教程-1.开发环境准备</title>
    <link href="http://example.com/2021/05/06/1-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://example.com/2021/05/06/1-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2021-05-06T05:52:41.000Z</published>
    <updated>2023-02-14T08:22:47.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>首先说一下为什么要写这个教程？</p><ol><li>为自己的开发做个备份，以防太久没开发，忘了</li><li>为国内 Obsidian 插件开发就一些小工作</li></ol><p>首先这个教程是面向完全新手的，可能会有些啰嗦，其中的安装使用仅限于 Windows10，如果遇到网络问题，请自行解决。<br>其次，这个教程也不会面面俱到，主要是不会涉及到 <code>js</code> 和 <code>ts</code> 有关的内容，因为知识点实在太多，我这里只会推荐一些学习资源。</p><p>如果有任何问题，可以在 <a href="https://github.com/renmu123/renmu123.github.io">https://github.com/renmu123/renmu123.github.io</a> 中开 issue 进行反馈。</p><span id="more"></span><h1 id="Obsidian-开发资源介绍"><a href="#Obsidian-开发资源介绍" class="headerlink" title="Obsidian 开发资源介绍"></a>Obsidian 开发资源介绍</h1><h2 id="开发模板"><a href="#开发模板" class="headerlink" title="开发模板"></a>开发模板</h2><p>首先是官方的开发模板 <a href="https://github.com/obsidianmd/obsidian-sample-plugin">obsidian-sample-plugin</a></p><h2 id="官方论坛"><a href="#官方论坛" class="headerlink" title="官方论坛"></a>官方论坛</h2><p><a href="https://forum.obsidian.md/">官方论坛</a> 是我们最好的朋友，有任何疑问问就完事了。</p><h2 id="其他资源"><a href="#其他资源" class="headerlink" title="其他资源"></a>其他资源</h2><p>大佬的代码片段，给了我非常多的帮助 <a href="https://liamca.in/hello">Liam Cain</a></p><h1 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h1><h2 id="git-安装"><a href="#git-安装" class="headerlink" title="git 安装"></a>git 安装</h2><p>可以上<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">官方教程</a>找到各个系统的安装步骤。<br>win 可以点击这个<a href="https://git-scm.com/download/win">链接</a> 直接进行下载安装。</p><p>安装完成后进行初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先在本地创建ssh key</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email@youremail.com&quot;</span></span><br><span class="line"><span class="comment"># 后面的your_email@youremail.com改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。</span></span><br><span class="line"><span class="comment"># 回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</span></span><br><span class="line"><span class="comment"># 验证是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 设置用户名和邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="node-环境准备"><a href="#node-环境准备" class="headerlink" title="node 环境准备"></a>node 环境准备</h2><p>obsidian 是基于 electron 的应用程序，而 electron 又是基于 node.js。<br>在这里 node.js 主要用于将 ts 代码编译成 js。<br><a href="https://nodejs.org/en/download/">在这里</a> 你可以找个各个系统的安装教程，按照要求安装即可。</p><p>由于网络原因，我推荐将 npm 源修改为淘宝源。按住 <code>Win+r</code> 输入 cmd，再输入以下的代码即可完成设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="编辑器准备"><a href="#编辑器准备" class="headerlink" title="编辑器准备"></a>编辑器准备</h2><p>在这里我最为推荐的编辑器是出自微软家的开源编辑器 <code>vscode</code>，首先其针对前端开发做了不少优化，其次也拥有丰富的生态来满足你的个性化需求。</p><p>点击<a href="https://code.visualstudio.com/">链接</a>进行安装。</p><p>以上内容都完成之后来看下一篇 <a href="/2021/05/06/2-%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/" title="Obsidian开发教程-2.编译运行">Obsidian开发教程-2.编译运行</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;首先说一下为什么要写这个教程？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为自己的开发做个备份，以防太久没开发，忘了&lt;/li&gt;
&lt;li&gt;为国内 Obsidian 插件开发就一些小工作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先这个教程是面向完全新手的，可能会有些啰嗦，其中的安装使用仅限于 Windows10，如果遇到网络问题，请自行解决。&lt;br&gt;其次，这个教程也不会面面俱到，主要是不会涉及到 &lt;code&gt;js&lt;/code&gt; 和 &lt;code&gt;ts&lt;/code&gt; 有关的内容，因为知识点实在太多，我这里只会推荐一些学习资源。&lt;/p&gt;
&lt;p&gt;如果有任何问题，可以在 &lt;a href=&quot;https://github.com/renmu123/renmu123.github.io&quot;&gt;https://github.com/renmu123/renmu123.github.io&lt;/a&gt; 中开 issue 进行反馈。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Obsidian插件开发, ts" scheme="http://example.com/tags/Obsidian%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91-ts/"/>
    
  </entry>
  
</feed>
